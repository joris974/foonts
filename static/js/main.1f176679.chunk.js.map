{"version":3,"sources":["helpers/api.js","components/navbar.js","components/spinner.js","components/app.js","components/download-modal.js","components/checkbox.js","helpers/helper.js","components/sidebar.js","components/fonts.js","components/editable-title.js","components/editable-content.js","components/application-meta.js","components/generate-page.js","components/font-pairing-snippet.js","components/explore-page.js","components/explore-recent-page.js","components/explore-popular-page.js","components/fonts-page/font-list-item.js","components/fonts-page/sort-list-filter.js","components/fonts-page/fonts-page.js","components/fonts-page/fonts-page-wrapper.js","serviceWorker.js","index.js","routers/router.js"],"names":["getApiUrl","window","location","hostname","sendApi","url","postParams","$","ajax","method","contentType","data","JSON","stringify","sendFontPairingToApi","titleFont","contentFont","id","Navbar","links","className","to","activeClassName","Spinner","App","props","state","fontList","loadFonts","then","setState","this","children","length","React","cloneElement","href","Component","DownloadModal","show","onHide","_","isNull","toUrlFontFamily","st","replace","toFontCategory","embedCode","family","cssCode","category","Modal","Header","closeButton","Title","Body","dangerouslySetInnerHTML","__html","Checkbox","isChecked","label","handleChangeCheckbox","icon","onClick","fontsFromUrlParams","paramsPathPiece","isEmpty","paramChunks","split","titleFontPathPiece","contentFontPathPiece","fromUrl","contentFontFamily","findFontByFamily","find","font","some","x","updateFontStyle","fontStyleProps","changeType","changeValue","fontSize","fontWeight","fontStyle","newFontSize","newFontWeight","newFontStyle","newFontCategories","fontCategories","includes","difference","concat","fontsToUrl","fontsToSubUrl","labelForCategory","randomFont","categories","chain","filter","sample","value","SidebarItem","showConfig","onChangeLock","isLocked","onChangeStyle","iconLockClassName","isItalic","isBolded","allCategoriesNodes","map","key","configNode","toggleConfigMenu","bind","hasLiked","existingInStorage","localStorage","getItem","fontPairing","likedPairings","Sidebar","showDownloadModal","isLiked","nextProps","fontTitle","sendFontPairingLikeToApi","newInStorage","setItem","onClickSwap","onClickGenerate","titleFontStyleProps","onChangeTitleStyle","onChangeLockTitle","isTitleLocked","contentFontStyleProps","onChangeContentStyle","onChangeLockContent","isContentLocked","handleClickLike","Fonts","fontName","fontUrl","fontFace","EditableTitle","content","event","target","style","fontFamily","contentEditable","onChange","handleChange","DefaultContent","EditableContent","contentPs","line","i","ApplicationMeta","baseWebsiteUrl","defaultTitleStyleProps","defaultContentStyleProps","GeneratePage","fromParams","params","match","fonts","handleKeyPressF","handleKeyPress","history","sampleSize","randTitleFont","randContentFont","push","addEventListener","removeEventListener","HTMLButtonElement","keyCode","generate","newTitleFontStyleProps","newContentFontStyleProps","e","preventDefault","newTitleFont","newContentFont","fontFacesNode","updateTitleStyle","updateContentStyle","handleSwap","handleClickGenerate","withRouter","FontPairingItem","pairing","font_title_id","fontContent","font_content_id","num_views","num_liked","ExplorePage","numMaxVisible","fontPairings","pairings","take","btnSeeMore","onClickSeeMore","pairingsNode","ExploreRecentPage","recentFontPairings","loadRecentFontPairings","ExplorePopularPage","loadPopularFontPairings","FontListItem","SortListFilter","showDropdown","sortBy","handleChangeSortBy","sortedBy","handleToggleDropdown","capitalize","FontsPage","filteredFontList","c","filterFontList","sortedList","fontsNode","toCheckboxLi","categ","title","FontsPageWrapper","Boolean","ReactDOM","render","exact","from","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1f176679.chunk.js","sourcesContent":["import $ from \"jquery\";\r\n\r\nfunction getApiUrl() {\r\n  return window.location.hostname === \"foonts.localhost.com\"\r\n    ? \"https://foonts-api.localhost.com/\"\r\n    : \"https://api.foonts.net/\";\r\n}\r\n\r\nexport function loadFonts() {\r\n  const url = `${getApiUrl()}fonts`;\r\n  return $.ajax({ url });\r\n}\r\n\r\nexport function loadRecentFontPairings() {\r\n  const url = `${getApiUrl()}font-pairings/recent`;\r\n  return $.ajax({ url });\r\n}\r\n\r\nexport function loadPopularFontPairings() {\r\n  const url = `${getApiUrl()}font-pairings/liked`;\r\n  return $.ajax({ url });\r\n}\r\n\r\nfunction sendApi(url, postParams) {\r\n  return $.ajax({\r\n    url,\r\n    method: \"POST\",\r\n    contentType: \"application/json\",\r\n    data: JSON.stringify(postParams)\r\n  });\r\n}\r\n\r\nexport function sendFontPairingToApi(titleFont, contentFont) {\r\n  const url = `${getApiUrl()}font-pairings/`;\r\n  const postParams = {\r\n    \"font-title-id\": titleFont.id,\r\n    \"font-content-id\": contentFont.id\r\n  };\r\n  return sendApi(url, postParams);\r\n}\r\n\r\nexport function sendFontPairingLikeToApi(titleFont, contentFont) {\r\n  const url = `${getApiUrl()}font-pairings/like`;\r\n  const postParams = {\r\n    \"font-title-id\": titleFont.id,\r\n    \"font-content-id\": contentFont.id\r\n  };\r\n  return sendApi(url, postParams);\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  const links = (\r\n    <ul className=\"nav navbar-nav navbar-right\">\r\n      <li>\r\n        <Link to=\"/generate\" activeClassName=\"active\">\r\n          Generate\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/explore/recent\" activeClassName=\"active\">\r\n          Explore\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/fonts\" activeClassName=\"active\">\r\n          Fonts\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n  return (\r\n    <nav className=\"navbar navbar-default navbar-foonts\">\r\n      <div className=\"container\">\r\n        <div className=\"navbar-header\">\r\n          <Link to=\"/\" className=\"navbar-brand\" activeClassName=\"active\">\r\n            Foonts\r\n          </Link>\r\n        </div>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react'\r\n\r\nexport default function Spinner() {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <i className=\"fa fa-circle-o-notch fa-2x fa-spin\"></i>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport {loadFonts} from './../helpers/api.js'\r\nimport Navbar from './navbar.js'\r\nimport Spinner from './spinner.js'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state =\r\n      { fontList: [] }\r\n  }\r\n\r\n  componentDidMount() {\r\n    loadFonts()\r\n    .then((fontList) => {\r\n      this.setState({fontList})\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {fontList} = this.state\r\n\r\n    const children =\r\n      this.props.children && fontList.length > 0 ?\r\n        React.cloneElement(this.props.children, { fontList }) :\r\n        <Spinner />\r\n\r\n    return (\r\n      <div className=\"main-container\">\r\n\r\n        <Navbar />\r\n\r\n        <div className=\"body-container\">\r\n          {children}\r\n        </div>\r\n\r\n        <footer className=\"text-center\">\r\n          Designed and built by <a href=\"https://github.com/joris974\">Joris Buchou</a>. ©2017\r\n        </footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nclass DownloadModal extends React.Component {\r\n  render() {\r\n    const { titleFont, contentFont, show, onHide } = this.props;\r\n\r\n    if (_.isNull(titleFont) || _.isNull(contentFont)) {\r\n      return null;\r\n    }\r\n\r\n    const toUrlFontFamily = st => st.replace(/ /g, \"+\");\r\n    const toFontCategory = st => st.replace(\"display\", \"cursive\");\r\n    const embedCode = `<link href=\"https://fonts.googleapis.com/css?family=${toUrlFontFamily(\r\n      titleFont.family\r\n    )}|${toUrlFontFamily(contentFont.family)}\" rel=\"stylesheet\">`;\r\n\r\n    const cssCode = `\r\n      font-family: '${titleFont.family}', ${toFontCategory(titleFont.category)};\r\n      <br/>\r\n      font-family: '${contentFont.family}', ${toFontCategory(\r\n      contentFont.category\r\n    )};\r\n    `;\r\n\r\n    return (\r\n      <Modal show={show} onHide={onHide}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Fast ways to use these fonts</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <h4 className=\"section-title\">You have selected these fonts</h4>\r\n          <br />\r\n          <h4 className=\"section-title\">Title</h4>\r\n          <p>{titleFont.family}</p>\r\n\r\n          <h4 className=\"section-title\">Paragraphs</h4>\r\n          <p>{contentFont.family}</p>\r\n\r\n          <h4 className=\"section-title margin-top-lg\">Embed Font</h4>\r\n          <p>\r\n            To embed your selected fonts into a webpage, copy this code into the\r\n            head of your HTML document.\r\n          </p>\r\n          <pre>{embedCode}</pre>\r\n\r\n          <h4 className=\"section-title margin-top-lg\">Specify in CSS</h4>\r\n          <p>Use the following CSS rules to specify these families:</p>\r\n          <pre dangerouslySetInnerHTML={{ __html: cssCode }} />\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DownloadModal;\r\n","import React from \"react\";\r\n\r\nexport default function Checkbox(props) {\r\n  const { isChecked, label, handleChangeCheckbox } = props;\r\n  const icon = isChecked ? (\r\n    <span className=\"custom-checkbox-icon fa fa-2x fa-check-square\"></span>\r\n  ) : (\r\n    <span className=\"custom-checkbox-icon fa fa-2x fa-square\"></span>\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={`custom-checkbox ${isChecked ? \"checked\" : \"\"}`}\r\n      onClick={handleChangeCheckbox}\r\n    >\r\n      {icon}\r\n      <span className=\"custom-checkbox-label\">{label}</span>\r\n    </div>\r\n  );\r\n}\r\n","import _ from \"lodash\";\r\n\r\nexport function allCategories() {\r\n  return [\"display\", \"serif\", \"sans-serif\", \"monospace\", \"handwriting\"];\r\n}\r\n\r\nexport function fontsFromUrlParams(paramsPathPiece, fontList) {\r\n  if (_.isEmpty(paramsPathPiece)) {\r\n    return {};\r\n  }\r\n\r\n  const paramChunks = paramsPathPiece.split(\"--\");\r\n  if (paramChunks.length !== 2) {\r\n    return {};\r\n  }\r\n\r\n  const [titleFontPathPiece, contentFontPathPiece] = paramChunks;\r\n  const fromUrl = st => st.replace(/-/g, \" \");\r\n\r\n  const [titleFontFamily, contentFontFamily] = [\r\n    fromUrl(titleFontPathPiece),\r\n    fromUrl(contentFontPathPiece)\r\n  ];\r\n\r\n  const findFontByFamily = family =>\r\n    _.find(fontList, font => font.family === family);\r\n\r\n  const [titleFont, contentFont] = [\r\n    findFontByFamily(titleFontFamily),\r\n    findFontByFamily(contentFontFamily)\r\n  ];\r\n\r\n  if (_.some([titleFont, contentFont], x => !x)) {\r\n    return null;\r\n  }\r\n\r\n  return { titleFont, contentFont };\r\n}\r\n\r\nexport function updateFontStyle(fontStyleProps, changeType, changeValue) {\r\n  const { fontSize, fontWeight, fontStyle, fontCategories } = fontStyleProps;\r\n\r\n  let newFontSize = fontSize;\r\n  let newFontWeight = fontWeight;\r\n  let newFontStyle = fontStyle;\r\n  let newFontCategories = fontCategories;\r\n\r\n  if (changeType === \"italic\") {\r\n    newFontStyle = fontStyle === \"italic\" ? \"normal\" : \"italic\";\r\n  }\r\n  if (changeType === \"bold\") {\r\n    newFontWeight = fontWeight === \"bold\" ? \"normal\" : \"bold\";\r\n  }\r\n  if (changeType === \"increment\") {\r\n    newFontSize = newFontSize + 1;\r\n  }\r\n\r\n  if (changeType === \"decrement\") {\r\n    newFontSize = newFontSize - 1;\r\n  }\r\n\r\n  if (changeType === \"category\") {\r\n    if (_.includes(newFontCategories, changeValue)) {\r\n      newFontCategories = _.difference(newFontCategories, [changeValue]);\r\n    } else {\r\n      newFontCategories = _.concat(newFontCategories, [changeValue]);\r\n    }\r\n  }\r\n\r\n  const newFontStyleProps = {\r\n    fontSize: newFontSize,\r\n    fontWeight: newFontWeight,\r\n    fontStyle: newFontStyle,\r\n    fontCategories: newFontCategories\r\n  };\r\n  return newFontStyleProps;\r\n}\r\n\r\nexport function fontsToUrl(titleFont, contentFont) {\r\n  return fontsToSubUrl(titleFont, contentFont);\r\n}\r\n\r\nexport function fontsToSubUrl(titleFont, contentFont) {\r\n  const toUrlFontFamily = st => st.replace(/ /g, \"-\");\r\n  return `/generate/${toUrlFontFamily(titleFont.family)}--${toUrlFontFamily(\r\n    contentFont.family\r\n  )}`;\r\n}\r\n\r\nexport function labelForCategory(category) {\r\n  switch (category) {\r\n    case \"serif\":\r\n      return \"Serif\";\r\n    case \"sans-serif\":\r\n      return \"Sans serif\";\r\n    case \"display\":\r\n      return \"Cursive\";\r\n    case \"handwriting\":\r\n      return \"Handwriting\";\r\n    case \"monospace\":\r\n      return \"Monospace\";\r\n  }\r\n}\r\n\r\nexport function randomFont(fontList, categories) {\r\n  return _.chain(fontList)\r\n    .filter(font => _.includes(categories, font.category))\r\n    .sample()\r\n    .value();\r\n}\r\n","import React from 'react'\r\nimport _ from 'lodash'\r\nimport DownloadModal from './download-modal.js'\r\nimport Checkbox from './checkbox.js'\r\nimport {sendFontPairingLikeToApi} from './../helpers/api.js'\r\nimport {allCategories, labelForCategory} from './../helpers/helper.js'\r\n\r\nclass SidebarItem extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state ={showConfig: false}\r\n  }\r\n\r\n  toggleConfigMenu() {\r\n    this.setState({showConfig: !this.state.showConfig})\r\n  }\r\n\r\n  render() {\r\n    const {font, onChangeLock, isLocked, fontStyleProps, onChangeStyle} = this.props\r\n    const {showConfig} = this.state\r\n\r\n    const {fontStyle, fontWeight, fontCategories} = fontStyleProps\r\n\r\n    if (_.isNull(font)) {\r\n      return null\r\n    }\r\n\r\n    const iconLockClassName =\r\n      isLocked ?\r\n        \"icon-lock-locked fa-lock\" :\r\n        \"icon-lock-unlocked fa-unlock-alt\"\r\n\r\n    const isItalic = fontStyle === \"italic\"\r\n    const isBolded = fontWeight === \"bold\"\r\n\r\n    const allCategoriesNodes = _.map(allCategories(), category => {\r\n      return (\r\n        <div key={category} className=\"col-xs-6\">\r\n          <Checkbox\r\n            isChecked={_.includes(fontCategories, category)}\r\n            label={labelForCategory(category)}\r\n            handleChangeCheckbox={() => onChangeStyle(\"category\", category)}\r\n          />\r\n        </div>\r\n      )\r\n    })\r\n\r\n    const configNode =\r\n      !showConfig ?\r\n        null:\r\n        <div className=\"row sidebar-item-config section-actions\">\r\n          <div className=\"col-xs-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-6\">\r\n                <h4>Style</h4>\r\n              </div>\r\n              <div className=\"col-xs-2 col-xs-offset-2\">\r\n                <h4>Size</h4>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-3\">\r\n                <Checkbox\r\n                  isChecked={isItalic}\r\n                  handleChangeCheckbox={() => onChangeStyle(\"italic\")}\r\n                  label={<i className=\"fa fa-italic\"></i>}\r\n                />\r\n              </div>\r\n              <div className=\"col-xs-3\">\r\n                <Checkbox\r\n                  isChecked={isBolded}\r\n                  handleChangeCheckbox={() => onChangeStyle(\"bold\")}\r\n                  label={<i className=\"fa fa-bold\"></i>}\r\n                />\r\n              </div>\r\n              <div className=\"col-xs-2 col-xs-offset-2\">\r\n                <i\r\n                  onClick={() => onChangeStyle(\"increment\")}\r\n                  className=\"fa fa-plus-circle icon-action icon-font-size\"\r\n                >\r\n                </i>\r\n              </div>\r\n              <div className=\"col-xs-2\">\r\n                <i\r\n                  onClick={() => onChangeStyle(\"decrement\")}\r\n                  className=\"fa fa-minus-circle icon-action icon-font-size\"\r\n                >\r\n                </i>\r\n              </div>\r\n            </div>\r\n            <div className=\"row margin-top-md\">\r\n              <div className=\"col-xs-12\">\r\n                <h4>Categories</h4>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              {allCategoriesNodes}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-11 pull-right\">\r\n          <div className=\"row section-command\">\r\n            <div className=\"col-xs-9\">\r\n              <h3>\r\n                {font.family}\r\n              </h3>\r\n            </div>\r\n            <div className=\"col-xs-3 text-right\">\r\n              <i\r\n                onClick={this.toggleConfigMenu.bind(this)}\r\n                className={`h3 icon-action fa fa-gear icon-gear ${showConfig ? \"active\" : \"\"}`}\r\n              >\r\n              </i>\r\n              <i\r\n                className={`h3 icon-action fa ${iconLockClassName}`}\r\n                onClick={onChangeLock}\r\n              >\r\n              </i>\r\n            </div>\r\n          </div>\r\n\r\n          {configNode}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction hasLiked(titleFont, contentFont) {\r\n  const existingInStorage = localStorage.getItem('font-pairing-liked')\r\n  const fontPairing = `${titleFont.id}-${contentFont.id}`\r\n  const likedPairings = existingInStorage ? existingInStorage.split(\",\") : []\r\n  return _.includes(likedPairings, fontPairing)\r\n}\r\n\r\nclass Sidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state =\r\n    { showDownloadModal: false\r\n      , isLiked: false\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if(nextProps.fontTitle !== this.props.fontTitle ||\r\n      nextProps.contentFont !== this.props.contentFont) {\r\n      this.setState({isLiked: false})\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {titleFont, contentFont} = this.props\r\n    this.setState({isLiked: hasLiked(titleFont, contentFont)})\r\n  }\r\n\r\n  handleClickLike() {\r\n    const {titleFont, contentFont} = this.props\r\n\r\n    const existingInStorage = localStorage.getItem('font-pairing-liked')\r\n    const likedPairings = existingInStorage ? existingInStorage.split(\",\") : []\r\n    const fontPairing = `${titleFont.id}-${contentFont.id}`\r\n\r\n    if (!_.includes(likedPairings, fontPairing)) {\r\n      sendFontPairingLikeToApi(titleFont, contentFont)\r\n      const newInStorage = likedPairings.concat(fontPairing)\r\n      localStorage.setItem('font-pairing-liked', newInStorage)\r\n    }\r\n\r\n    this.setState({isLiked: true})\r\n  }\r\n\r\n  render() {\r\n    const {onClickSwap, onClickGenerate} = this.props\r\n    const {titleFont, titleFontStyleProps, onChangeTitleStyle, onChangeLockTitle, isTitleLocked} = this.props\r\n    const {contentFont, contentFontStyleProps, onChangeContentStyle, onChangeLockContent, isContentLocked} = this.props\r\n\r\n    const {showDownloadModal, isLiked} = this.state\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12\">\r\n\r\n          <div className=\"row hidden-xs\">\r\n            <div className=\"col-xs-12\">\r\n              <SidebarItem\r\n                font={titleFont}\r\n                isLocked={isTitleLocked}\r\n                onChangeLock={onChangeLockTitle}\r\n                fontStyleProps={titleFontStyleProps}\r\n                onChangeStyle={onChangeTitleStyle}\r\n              />\r\n              <div className=\"row section-divider\">\r\n                <div className=\"col-xs-1 text-center\">\r\n                  <i\r\n                    className=\"fa fa-exchange fa-rotate-90 icon-action icon-swap\"\r\n                    onClick={onClickSwap}\r\n                  >\r\n                  </i>\r\n                </div>\r\n              </div>\r\n              <SidebarItem\r\n                font={contentFont}\r\n                isLocked={isContentLocked}\r\n                onChangeLock={onChangeLockContent}\r\n                fontStyleProps={contentFontStyleProps}\r\n                onChangeStyle={onChangeContentStyle}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-xs-12 col-sm-10 col-sm-offset-1 col-lg-8 col-lg-offset-2\">\r\n\r\n              <div className=\"row\">\r\n\r\n                <div className=\"col-xs-4 col-sm-12 margin-top-lg\">\r\n                  <button\r\n                    className=\"btn btn-block btn-generate\"\r\n                    onClick={onClickGenerate}\r\n                  >\r\n                    <i className=\"fa fa-refresh\"></i>\r\n                    <span className=\"hidden-xs\">\r\n                      &nbsp;Generate\r\n                    </span>\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"col-xs-4 col-sm-12 margin-top-lg\">\r\n                  <button\r\n                    className={`btn btn-block btn-default btn-like ${isLiked ? \"liked\" : \"\"}`}\r\n                    onClick={this.handleClickLike.bind(this)}\r\n                  >\r\n                    <i className={`fa fa-heart`}></i>\r\n                    <span className=\"hidden-xs\">\r\n                      &nbsp;{isLiked ? \"You liked this\" : \"Like\"}\r\n                    </span>\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"col-xs-4 col-sm-12 margin-top-lg\">\r\n                  <button\r\n                    className=\"btn btn-block btn-default btn-custom\"\r\n                    onClick={() => {this.setState({showDownloadModal: true})}}\r\n                  >\r\n                    <i className=\"fa fa-download\"></i>\r\n                    <span className=\"hidden-xs\">\r\n                      &nbsp;Download\r\n                    </span>\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"col-sm-12 margin-top-sm hidden-xs\">\r\n                  <p className=\"text-muted\">\r\n                    Tip: Press space bar to generate a new combination.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <DownloadModal\r\n            show={showDownloadModal}\r\n            onHide={() => {this.setState({showDownloadModal: false})}}\r\n            titleFont={titleFont}\r\n            contentFont={contentFont}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Sidebar","import React from 'react'\r\n\r\nclass Fonts extends React.Component {\r\n\r\n  render() {\r\n    const {fontName, fontUrl} = this.props\r\n\r\n    const toHttps = st => st.replace(/http:/g, \"https:\")\r\n\r\n    const fontFace = `\r\n      @font-face {\r\n        font-family: '${fontName}';\r\n        src: url('${toHttps(fontUrl)}');\r\n      }`\r\n    return (\r\n      <style>\r\n       {fontFace}\r\n      </style>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Fonts\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst DefaultTitle = \"Find best matching fonts in seconds!!\";\r\n\r\nclass EditableTitle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { content: DefaultTitle };\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ content: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { fontStyleProps, font } = this.props;\r\n    const { fontSize, fontWeight, fontStyle } = fontStyleProps;\r\n\r\n    const content = this.state.content;\r\n    const style = {\r\n      fontSize: `${fontSize}px`,\r\n      fontWeight: `${fontWeight}`,\r\n      fontStyle: `${fontStyle}`,\r\n      fontFamily: !_.isNull(font) ? font.family : \"\"\r\n    };\r\n    return (\r\n      <h1\r\n        style={style}\r\n        contentEditable=\"true\"\r\n        className=\"editable editable-title\"\r\n        onChange={this.handleChange.bind(this)}\r\n      >\r\n        {content}\r\n      </h1>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableTitle;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst DefaultContent = [\r\n  ` Edit Me!`,\r\n  `If I had a world of my own, everything would be nonsense.\r\n    Nothing would be what it is, because everything would be what it isn't.\r\n    And contrary wise, what is, it wouldn't be. And what it wouldn't be, it would. You see?\r\n    `,\r\n  `Sed scelerisque tristique nunc ac congue.\r\n    Vivamus dolor risus, fringilla a nisl at, pellentesque mattis nisi.\r\n    `,\r\n  `Aliquam facilisis blandit elit nec tempor.\r\n    Aenean commodo tortor ac justo ultrices, quis finibus diam tempus.\r\n    Donec efficitur diam tellus, vitae varius diam euismod eu.\r\n    Phasellus viverra tellus lacus.\r\n    Nam quis ultrices libero.\r\n    Ut pharetra, sem et tincidunt porttitor, felis urna tristique lacus, nec tincidunt nibh est et sapien.\r\n    Vestibulum tempor nisi at congue sodales.\r\n    `\r\n];\r\n\r\nclass EditableContent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { content: DefaultContent };\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ content: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { fontStyleProps, font } = this.props;\r\n    const { fontSize, fontWeight, fontStyle } = fontStyleProps;\r\n\r\n    const content = this.state.content;\r\n    const style = {\r\n      fontSize: `${fontSize}px`,\r\n      fontWeight: `${fontWeight}`,\r\n      fontStyle: `${fontStyle}`,\r\n      fontFamily: !_.isNull(font) ? font.family : \"\"\r\n    };\r\n\r\n    const contentPs = _.map(content, (line, i) => <p key={i}>{line}</p>);\r\n\r\n    return (\r\n      <div\r\n        style={style}\r\n        contentEditable=\"true\"\r\n        className=\"p editable editable-content\"\r\n        onChange={this.handleChange.bind(this)}\r\n      >\r\n        {contentPs}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableContent;\r\n","import React from \"react\";\r\n// import Helmet from \"react-helmet\";\r\n\r\nimport { fontsToUrl } from \"./../helpers/helper.js\";\r\n\r\nexport default function ApplicationMeta(props) {\r\n  const { titleFont, contentFont } = props;\r\n  const hostname = window.location.hostname;\r\n  const baseWebsiteUrl = `https://${hostname}/`;\r\n\r\n  const fontUrl =\r\n    titleFont && contentFont ? fontsToUrl(titleFont, contentFont) : \"\";\r\n  const canonicalUrl = `${baseWebsiteUrl}${fontUrl}`;\r\n\r\n  const title =\r\n    titleFont && contentFont\r\n      ? `${titleFont.family} with ${contentFont.family}`\r\n      : null;\r\n\r\n  return (\r\n    <div className=\"application\">\r\n      {/* <Helmet\r\n        title={title}\r\n        titleTemplate=\"Foonts - %s\"\r\n        defaultTitle=\"Find perfect matchings fonts in seconds!\"\r\n        titleAttributes={{itemprop: \"name\", lang: \"en\"}}\r\n        base={{target: \"_blank\", href: baseWebsiteUrl}}\r\n        meta={[\r\n          {property: \"og:url\", content: canonicalUrl}\r\n        ]}\r\n        link={[\r\n          {rel: \"canonical\", href: canonicalUrl},\r\n        ]}\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n","import { withRouter } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport { sendFontPairingToApi } from \"./../helpers/api.js\";\r\n\r\nimport Sidebar from \"./sidebar.js\";\r\nimport Spinner from \"./spinner.js\";\r\nimport Fonts from \"./fonts.js\";\r\nimport EditableTitle from \"./editable-title.js\";\r\nimport EditableContent from \"./editable-content.js\";\r\nimport ApplicationMeta from \"./application-meta.js\";\r\nimport {\r\n  fontsFromUrlParams,\r\n  updateFontStyle,\r\n  fontsToUrl,\r\n  allCategories,\r\n  randomFont\r\n} from \"./../helpers/helper.js\";\r\n\r\nconst defaultTitleStyleProps = {\r\n  fontSize: 36,\r\n  fontWeight: \"normal\",\r\n  fontStyle: \"normal\",\r\n  fontCategories: allCategories()\r\n};\r\n\r\nconst defaultContentStyleProps = {\r\n  fontSize: 14,\r\n  fontWeight: \"normal\",\r\n  fontStyle: \"normal\",\r\n  fontCategories: allCategories()\r\n};\r\n\r\nclass GeneratePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const params = props.match && props.match.params;\r\n    let fromParams;\r\n    if (!_.isEmpty(params)) {\r\n      fromParams = fontsFromUrlParams(params.fonts, props.fontList);\r\n    }\r\n    const titleFont = fromParams ? fromParams.titleFont : null;\r\n    const contentFont = fromParams ? fromParams.contentFont : null;\r\n\r\n    this.state = {\r\n      titleFont,\r\n      contentFont,\r\n      isTitleLocked: false,\r\n      isContentLocked: false,\r\n      titleFontStyleProps: defaultTitleStyleProps,\r\n      contentFontStyleProps: defaultContentStyleProps\r\n    };\r\n\r\n    this.handleKeyPressF = this.handleKeyPress.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { history, location, match, fontList } = this.props;\r\n    const params = match && match.params;\r\n\r\n    if (_.isEmpty(params) || _.isEmpty(params.fonts)) {\r\n      if (fontList.length > 0) {\r\n        const [randTitleFont, randContentFont] = _.sampleSize(fontList, 2);\r\n        const url = fontsToUrl(randTitleFont, randContentFont);\r\n        history.push(url);\r\n        this.setState({\r\n          titleFont: randTitleFont,\r\n          contentFont: randContentFont\r\n        });\r\n      }\r\n    } else {\r\n      const { titleFont, contentFont } = fontsFromUrlParams(\r\n        params.fonts,\r\n        fontList\r\n      );\r\n      sendFontPairingToApi(titleFont, contentFont);\r\n    }\r\n    window.addEventListener(\"keydown\", this.handleKeyPressF);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyPressF);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { fontList, history, match } = nextProps;\r\n    const params = match && match.params;\r\n\r\n    if (_.isEmpty(params) || _.isEmpty(params.fonts)) {\r\n      if (fontList.length > 0) {\r\n        const [randTitleFont, randContentFont] = _.sampleSize(fontList, 2);\r\n        const url = fontsToUrl(randTitleFont, randContentFont);\r\n        history.push(url);\r\n      }\r\n    } else {\r\n      const { titleFont, contentFont } = fontsFromUrlParams(\r\n        params.fonts,\r\n        fontList\r\n      );\r\n      sendFontPairingToApi(titleFont, contentFont);\r\n      this.setState({ titleFont, contentFont });\r\n    }\r\n  }\r\n\r\n  handleKeyPress(event) {\r\n    if (_.includes(event.target.className.split(\" \"), \"editable\")) {\r\n      return;\r\n    }\r\n    if (event.target instanceof HTMLButtonElement) {\r\n      return;\r\n    }\r\n\r\n    if (event.keyCode == 32) {\r\n      this.generate();\r\n    }\r\n  }\r\n\r\n  handleSwap() {\r\n    const {\r\n      titleFont,\r\n      contentFont,\r\n      isTitleLocked,\r\n      isContentLocked,\r\n      titleFontStyleProps,\r\n      contentFontStyleProps\r\n    } = this.state;\r\n\r\n    const newTitleFontStyleProps = {\r\n      fontSize: titleFontStyleProps.fontSize,\r\n      fontWeight: contentFontStyleProps.fontWeight,\r\n      fontStyle: contentFontStyleProps.fontStyle,\r\n      fontCategories: contentFontStyleProps.fontCategories\r\n    };\r\n    const newContentFontStyleProps = {\r\n      fontSize: contentFontStyleProps.fontSize,\r\n      fontWeight: titleFontStyleProps.fontWeight,\r\n      fontStyle: titleFontStyleProps.fontStyle,\r\n      fontCategories: titleFontStyleProps.fontCategories\r\n    };\r\n    this.setState(\r\n      {\r\n        titleFont: contentFont,\r\n        contentFont: titleFont,\r\n        isTitleLocked: isContentLocked,\r\n        isContentLocked: isTitleLocked,\r\n        titleFontStyleProps: newTitleFontStyleProps,\r\n        contentFontStyleProps: newContentFontStyleProps\r\n      },\r\n      () => {\r\n        const { titleFont, contentFont } = this.state;\r\n        sendFontPairingToApi(titleFont, contentFont);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleClickGenerate(e) {\r\n    const { isTitleLocked, isContentLocked } = this.state;\r\n    if (isTitleLocked && isContentLocked) {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n    this.generate();\r\n  }\r\n\r\n  updateTitleStyle(changeType, changeValue) {\r\n    const { titleFontStyleProps } = this.state;\r\n    const newTitleFontStyleProps = updateFontStyle(\r\n      titleFontStyleProps,\r\n      changeType,\r\n      changeValue\r\n    );\r\n    this.setState({ titleFontStyleProps: newTitleFontStyleProps });\r\n  }\r\n\r\n  updateContentStyle(changeType, changeValue) {\r\n    const { contentFontStyleProps } = this.state;\r\n    const newContentFontStyleProps = updateFontStyle(\r\n      contentFontStyleProps,\r\n      changeType,\r\n      changeValue\r\n    );\r\n    this.setState({ contentFontStyleProps: newContentFontStyleProps });\r\n  }\r\n\r\n  generate() {\r\n    const { fontList, history } = this.props;\r\n\r\n    if (fontList.length > 0) {\r\n      const {\r\n        titleFont,\r\n        contentFont,\r\n        isTitleLocked,\r\n        isContentLocked,\r\n        titleFontStyleProps,\r\n        contentFontStyleProps\r\n      } = this.state;\r\n\r\n      const randTitleFont = randomFont(\r\n        fontList,\r\n        titleFontStyleProps.fontCategories\r\n      );\r\n      const randContentFont = randomFont(\r\n        fontList,\r\n        contentFontStyleProps.fontCategories\r\n      );\r\n\r\n      const newTitleFont = isTitleLocked ? titleFont : randTitleFont;\r\n      const newContentFont = isContentLocked ? contentFont : randContentFont;\r\n\r\n      const url = fontsToUrl(newTitleFont, newContentFont);\r\n      history.push(url);\r\n\r\n      this.setState(\r\n        { titleFont: newTitleFont, contentFont: newContentFont },\r\n        () => {\r\n          const { titleFont, contentFont } = this.state;\r\n          sendFontPairingToApi(titleFont, contentFont);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      titleFont,\r\n      titleFontStyleProps,\r\n      contentFont,\r\n      contentFontStyleProps,\r\n      isTitleLocked,\r\n      isContentLocked\r\n    } = this.state;\r\n\r\n    if (!titleFont || !contentFont) {\r\n      return <Spinner />;\r\n    }\r\n\r\n    const fontFacesNode = _.chain([titleFont, contentFont])\r\n      .filter(x => !_.isNull(x))\r\n      .map(font => (\r\n        <Fonts key={font.family} fontName={font.family} fontUrl={font.url} />\r\n      ))\r\n      .value();\r\n\r\n    return (\r\n      <div>\r\n        <ApplicationMeta titleFont={titleFont} contentFont={contentFont} />\r\n\r\n        {fontFacesNode}\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row margin-top-lg\">\r\n            <div className=\"col-xs-12 col-sm-offset-0 col-sm-4\">\r\n              <Sidebar\r\n                titleFont={titleFont}\r\n                titleFontStyleProps={titleFontStyleProps}\r\n                onChangeTitleStyle={this.updateTitleStyle.bind(this)}\r\n                contentFont={contentFont}\r\n                contentFontStyleProps={contentFontStyleProps}\r\n                onChangeContentStyle={this.updateContentStyle.bind(this)}\r\n                isTitleLocked={isTitleLocked}\r\n                isContentLocked={isContentLocked}\r\n                onChangeLockTitle={() => {\r\n                  this.setState({ isTitleLocked: !this.state.isTitleLocked });\r\n                }}\r\n                onChangeLockContent={() => {\r\n                  this.setState({\r\n                    isContentLocked: !this.state.isContentLocked\r\n                  });\r\n                }}\r\n                onClickSwap={this.handleSwap.bind(this)}\r\n                onClickGenerate={this.handleClickGenerate.bind(this)}\r\n              />\r\n            </div>\r\n            <div className=\"col-xs-12 col-sm-8\">\r\n              <EditableTitle\r\n                font={titleFont}\r\n                fontStyleProps={titleFontStyleProps}\r\n              />\r\n              <EditableContent\r\n                font={contentFont}\r\n                fontStyleProps={contentFontStyleProps}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(GeneratePage);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport Fonts from \"./fonts.js\";\r\nimport { fontsToSubUrl } from \"./../helpers/helper.js\";\r\n\r\nconst FontPairingItem = props => {\r\n  const { fontList, pairing } = props;\r\n  const fontTitle = _.find(fontList, font => font.id === pairing.font_title_id);\r\n  const fontContent = _.find(\r\n    fontList,\r\n    font => font.id === pairing.font_content_id\r\n  );\r\n\r\n  const fontFacesNode = _.chain([fontTitle, fontContent])\r\n    .filter(x => !_.isNull(x))\r\n    .map(font => (\r\n      <Fonts key={font.family} fontName={font.family} fontUrl={font.url} />\r\n    ))\r\n    .value();\r\n\r\n  return (\r\n    <div className=\"col-xs-12 col-sm-6 col-md-4 col-lg-3 font-pairing-item-wrapper\">\r\n      <Link to={fontsToSubUrl(fontTitle, fontContent)}>\r\n        <div className=\"font-pairing-item\">\r\n          {fontFacesNode}\r\n          <div className=\"row font-pairing-item-body\">\r\n            <div className=\"col-xs-12\">\r\n              <h3 style={{ fontFamily: fontTitle.family }}>\r\n                {fontTitle.family}\r\n              </h3>\r\n              <p style={{ fontFamily: fontContent.family }}>\r\n                {fontContent.family}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"row text-right\">\r\n            <div className=\"col-xs-12\">\r\n              <ul className=\"list-inline font-pairing-item-status\">\r\n                <li>\r\n                  <i className=\"fa fa-eye\"></i> {pairing.num_views}\r\n                </li>\r\n                <li>\r\n                  <i className=\"fa fa-heart\"></i> {pairing.num_liked}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FontPairingItem;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\n\r\nimport FontPairingItem from \"./font-pairing-snippet.js\";\r\nimport Spinner from \"./spinner.js\";\r\n\r\nclass ExplorePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { numMaxVisible: 12 };\r\n  }\r\n\r\n  onClickSeeMore() {\r\n    this.setState({ numMaxVisible: this.state.numMaxVisible + 12 });\r\n  }\r\n\r\n  render() {\r\n    const { fontList, fontPairings } = this.props;\r\n    const { numMaxVisible } = this.state;\r\n\r\n    const pairings = _.chain(fontPairings)\r\n      .take(numMaxVisible)\r\n      .map(pairing => {\r\n        return (\r\n          <FontPairingItem\r\n            key={pairing.id}\r\n            fontList={fontList}\r\n            pairing={pairing}\r\n          />\r\n        );\r\n      })\r\n      .value();\r\n\r\n    const btnSeeMore =\r\n      numMaxVisible > fontPairings.length ? null : (\r\n        <div className=\"row see-more-wrapper\">\r\n          <div className=\"col-xs-12 text-center\">\r\n            <button\r\n              className=\"btn btn-default\"\r\n              onClick={this.onClickSeeMore.bind(this)}\r\n            >\r\n              See more <i className=\"fa fa-chevron-down\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n    const pairingsNode =\r\n      fontPairings.length > 0 ? (\r\n        <div className=\"container font-pairing-wrapper\">\r\n          <div className=\"row\">{pairings}</div>\r\n          {btnSeeMore}\r\n        </div>\r\n      ) : (\r\n        <Spinner />\r\n      );\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"container-fluid explore-nav\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xs-12 text-center\">\r\n              <ul className=\"explore-nav-menu list-inline\">\r\n                <li>\r\n                  <Link to=\"/explore/recent\" activeClassName=\"active\">\r\n                    Recent\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/explore/popular\" activeClassName=\"active\">\r\n                    Popular\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {pairingsNode}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExplorePage;\r\n","import React from 'react'\r\nimport ExplorePage from './explore-page.js'\r\nimport {loadRecentFontPairings} from './../helpers/api.js'\r\nimport Spinner from './spinner.js'\r\n\r\nclass ExploreRecentPage extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state =\r\n      { recentFontPairings: []}\r\n  }\r\n\r\n  componentDidMount() {\r\n    loadRecentFontPairings()\r\n    .then((recentFontPairings) => {\r\n      this.setState({recentFontPairings})\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {recentFontPairings} = this.state\r\n    const {fontList} = this.props\r\n\r\n    return (\r\n      recentFontPairings.length > 0 ?\r\n        <ExplorePage\r\n          fontList={fontList}\r\n          fontPairings={recentFontPairings}\r\n        /> :\r\n        <Spinner />\r\n    )\r\n  }\r\n}\r\n\r\nexport default ExploreRecentPage\r\n","import React from 'react'\r\nimport ExplorePage from './explore-page.js'\r\nimport {loadPopularFontPairings} from './../helpers/api.js'\r\nimport Spinner from './spinner.js'\r\n\r\nclass ExplorePopularPage extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state =\r\n      { recentFontPairings: []}\r\n  }\r\n\r\n  componentDidMount() {\r\n    loadPopularFontPairings()\r\n    .then((recentFontPairings) => {\r\n      this.setState({recentFontPairings})\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {recentFontPairings} = this.state\r\n    const {fontList} = this.props\r\n\r\n    return (\r\n      recentFontPairings.length > 0 ?\r\n        <ExplorePage\r\n          fontList={fontList}\r\n          fontPairings={recentFontPairings}\r\n        /> :\r\n        <Spinner />\r\n    )\r\n  }\r\n}\r\n\r\nexport default ExplorePopularPage\r\n","import React from \"react\";\r\n\r\nimport Fonts from \"./../fonts.js\";\r\n\r\nconst FontListItem = props => {\r\n  const font = props.font;\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-xs-12\">\r\n        <div className=\"font-item\">\r\n          <Fonts key={font.family} fontName={font.family} fontUrl={font.url} />\r\n          <h4>{font.family}</h4>\r\n          <h3 className=\"h2\" style={{ fontFamily: font.family }}>\r\n            The quick brown fox jumps over the lazy dog\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FontListItem;\r\n","import React from 'react'\r\nimport _ from 'lodash'\r\n\r\nclass SortListFilter extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {showDropdown: false}\r\n  }\r\n\r\n  handleToggleDropdown() {\r\n    this.setState({showDropdown: !this.state.showDropdown})\r\n  }\r\n\r\n  handleChangeSortBy(sortBy) {\r\n    this.props.handleChangeSortBy(sortBy)\r\n    this.setState({showDropdown: false})\r\n  }\r\n\r\n  render() {\r\n    const {sortedBy} = this.props\r\n    const {showDropdown} = this.state\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"sort-filter\">\r\n          <div className=\"sort-filter-title\">\r\n            Sort by&nbsp;\r\n              <span\r\n                className=\"sort-filter-label\"\r\n                onClick={this.handleToggleDropdown.bind(this)}\r\n              >\r\n                {_.capitalize(sortedBy)} <i className=\"fa fa-chevron-down\"></i>\r\n              </span>\r\n          </div>\r\n        </div>\r\n        <div className={`sort-filter-options ${showDropdown ? 'active' : ''}`}>\r\n          <ul className=\"list-unstyled\">\r\n            <li onClick={this.handleChangeSortBy.bind(this, \"popular\")}>Popular</li>\r\n            <li onClick={this.handleChangeSortBy.bind(this, \"alphabetical\")}>Alphabetical</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SortListFilter\r\n","import React from 'react'\r\n\r\nimport _ from 'lodash'\r\nimport FontListItem from './font-list-item.js'\r\nimport SortListFilter from './sort-list-filter.js'\r\nimport Checkbox from './../checkbox.js'\r\nimport {allCategories, labelForCategory} from './../../helpers/helper.js'\r\n\r\nconst filterFontList = function(fontList, fontCategories) {\r\n  return _.filter(fontList, font => _.includes(fontCategories, font.category))\r\n}\r\n\r\nconst isChecked = function(fontCategories, category) {\r\n  return _.includes(fontCategories, category)\r\n}\r\n\r\nclass FontsPage extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state =\r\n    { numMaxVisible: 12\r\n      , filteredFontList: props.fontList\r\n      , fontCategories: allCategories()\r\n      , sortedBy: \"popular\"\r\n    }\r\n  }\r\n\r\n  onClickSeeMore() {\r\n    this.setState(\r\n      { numMaxVisible: this.state.numMaxVisible + 12 }\r\n    )\r\n  }\r\n\r\n  handleChangeCheckbox(category){\r\n    const {fontCategories} = this.state\r\n\r\n    const newFontCategories =\r\n      _.includes(fontCategories, category) ?\r\n        _.filter(fontCategories, c => c !== category) :\r\n        fontCategories.concat([category])\r\n\r\n    const filteredFontList = filterFontList(this.props.fontList, newFontCategories)\r\n    this.setState(\r\n      { fontCategories: newFontCategories\r\n      , filteredFontList\r\n      }\r\n    )\r\n  }\r\n\r\n  handleChangeSortBy(sortBy) {\r\n    const {sortedBy} = this.state\r\n    if (sortBy === sortedBy) {\r\n      return\r\n    }\r\n    this.setState({sortedBy: sortBy})\r\n  }\r\n\r\n  render() {\r\n    const {numMaxVisible, filteredFontList, fontCategories, sortedBy} = this.state\r\n\r\n    const sortedList = _\r\n      .chain(filteredFontList)\r\n      .sortBy(font => {\r\n        if (sortedBy === \"alphabetical\") {\r\n          return font.family\r\n        } else if (sortedBy === \"popular\") {\r\n          return -font.num_liked\r\n        }\r\n      })\r\n      .take(numMaxVisible)\r\n      .value()\r\n\r\n    const fontsNode = _.map(sortedList, font => {\r\n      return (\r\n        <FontListItem\r\n          key={font.id}\r\n          font={font}\r\n        />\r\n      )\r\n    })\r\n\r\n\r\n    const btnSeeMore =\r\n      numMaxVisible > filteredFontList.length ?\r\n        null:\r\n        <div className=\"row see-more-wrapper\">\r\n          <div className=\"col-xs-12 text-center\">\r\n            <button\r\n              className=\"btn btn-default\"\r\n              onClick={this.onClickSeeMore.bind(this)}\r\n            >\r\n              See more <i className=\"fa fa-chevron-down\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n    const toCheckboxLi = (categ, title) => {\r\n      return (\r\n        <li className=\"li-fixed-width\">\r\n          <Checkbox\r\n            isChecked={isChecked(fontCategories, categ)}\r\n            handleChangeCheckbox={this.handleChangeCheckbox.bind(this, categ)}\r\n            label={title}\r\n          />\r\n        </li>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-xs-12 col-lg-4 margin-top-lg\">\r\n              <SortListFilter\r\n                sortedBy={sortedBy}\r\n                handleChangeSortBy={this.handleChangeSortBy.bind(this)}\r\n              />\r\n            </div>\r\n            <div className=\"col-xs-12 col-lg-8 margin-top-lg\">\r\n              <ul className=\"list-inline\">\r\n                {toCheckboxLi(\"serif\", labelForCategory(\"serif\"))}\r\n                {toCheckboxLi(\"sans-serif\", labelForCategory(\"sans-serif\"))}\r\n                {toCheckboxLi(\"display\", labelForCategory(\"display\"))}\r\n                {toCheckboxLi(\"handwriting\", labelForCategory(\"handwriting\"))}\r\n                {toCheckboxLi(\"monospace\", labelForCategory(\"monospace\"))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          {fontsNode}\r\n          {btnSeeMore}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FontsPage\r\n","import React from 'react'\r\nimport FontsPage from './fonts-page.js'\r\n\r\nclass FontsPageWrapper extends React.Component {\r\n\r\n  render() {\r\n    const {fontList} = this.props\r\n\r\n    return (\r\n      <FontsPage\r\n        fontList={fontList}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default FontsPageWrapper\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { AppRouter } from \"./routers/router\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./app.css\";\r\n\r\nReactDOM.render(<AppRouter />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport App from \"./../components/app.js\";\r\nimport GeneratePage from \"./../components/generate-page.js\";\r\nimport ExploreRecentPage from \"./../components/explore-recent-page.js\";\r\nimport ExplorePopularPage from \"./../components/explore-popular-page.js\";\r\nimport FontsWrapper from \"./../components/fonts-page/fonts-page-wrapper.js\";\r\n\r\nexport function AppRouter() {\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Redirect exact from=\"/\" to=\"/generate\" />\r\n        <Route path=\"/generate/:fonts?\">\r\n          <App>\r\n            <GeneratePage />\r\n          </App>\r\n        </Route>\r\n        <Route path=\"/explore/recent\">\r\n          <App>\r\n            <ExploreRecentPage />\r\n          </App>\r\n        </Route>\r\n        <Route path=\"/explore/popular\">\r\n          <App>\r\n            <ExplorePopularPage />\r\n          </App>\r\n        </Route>\r\n        <Route path=\"/fonts\">\r\n          <App>\r\n            <FontsWrapper />\r\n          </App>\r\n        </Route>\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n}\r\n"],"sourceRoot":""}